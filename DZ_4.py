# Задача 1. Случайная непрерывная величина A имеет равномерное распределение на
# промежутке (200, 800].
# Найдите ее среднее значение и дисперсию.
# M=(200+800)/2
# print(M)

# D=((800-200)**2)/12
# print (D)

# Задача 2. О случайной непрерывной равномерно распределенной величине B известно, что ее
# дисперсия равна 0.2.
# Можно ли найти правую границу величины B и ее среднее значение зная, что левая
# граница равна 0.5?
# Если да, найдите ее.

# распределнение величины на промежутке [0.5,x)
import math

# x= math.sqrt(12*0.2)+0.5
# print(x)


# Задача 3. Непрерывная случайная величина X распределена нормально и задана плотностью
# распределения
# f(x) = (1 / (4 * sqrt(2pi))) * exp((-(x+2)**2) / 32)
# Найдите:
# а). M(X)
# б). D(X)
# в). std(X) (среднее квадратичное отклонение)

#  M(X)= -2
#  D(X)= 16
#  std(X)= 4

# Задача 4. Рост взрослого населения города X имеет нормальное распределение, причем, средний рост равен 174 см, 
# а среднее квадратическое отклонение равно 8 см. посчитайте, 
# какова вероятность того, что случайным образом выбранный взрослый человек имеет рост:
# 1. больше 182 см?
import scipy.stats
# P1= 1 - scipy.stats.norm.cdf(182, loc=174, scale=8)
# print(P1)
# # 2. больше 190 см?
# P2 = 1 - scipy.stats.norm.cdf(190, loc=174, scale=8) 
# print(P2)
# # 3. от 166 см до 190 см?
# P3 = scipy.stats.norm.cdf(190, loc=174, scale=8) - (1- scipy.stats.norm.cdf(160, loc=174, scale=8))
# print (P3) 
# # 4. от 166 см до 182 см?
# P4= scipy.stats.norm.cdf(182, loc=174, scale=8) - (1- scipy.stats.norm.cdf(166, loc=174, scale=8))
# print(P4)
# # 5. от 158 см до 190 см?
# P5= scipy.stats.norm.cdf(190, loc=174, scale=8) - (1- scipy.stats.norm.cdf(158, loc=174, scale=8))
# print(P5)
# # 6. не выше 150 см или не ниже 190 см?
# P6= scipy.stats.norm.cdf(150, loc=174, scale=8) + (1- scipy.stats.norm.cdf(190, loc=174, scale=8))
# print(P6) 
# # 7. не выше 150 см или не ниже 198 см?
# P7= scipy.stats.norm.cdf(150, loc=174, scale=8) + (1- scipy.stats.norm.cdf(198, loc=174, scale=8))
# print(P7)
# # 8. ниже 166 см?
# P8= scipy.stats.norm.cdf(166, loc=174, scale=8)
# print (P8)


# Задача 5. На сколько сигм (средних квадратичных отклонений) отклоняется рост человека,
# равный 190 см, от
# математического ожидания роста в популяции, в которой M(X) = 178 см и D(X) = 25 кв.см?

# Z=(190 - 178)/5
# print(Z)

# Задача 6. Даны значения зарплат из выборки выпускников:

# 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.

# построить гистограмму распределения, подобрав лучший параметр bins,
# найти первый и третий квартили, интерквартильное расстояние. Найти выбросы в выборке, используя для этого "усы" из boxplot.

import numpy as np
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt

z=np.array([100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150])
n=len(z)
print(n)


# plt.hist(z, bins = 5, edgecolor='black')
# plt.title('Выпускники')
# plt.xlabel('Зарплаты выпускников')
# plt.ylabel('Размер зп')

# plt.show()

z1 = sorted(z)
print (z1)

# значение первого квартиля p1
# n=20
# k1=25
# x1 = n*k1/100
# print(x1)
# x1=5
# p1 = (z1[5]+z1[6])/2
# print (p1)

# # значение 3го квартиля p2
# k2 = 75
# x2 = n*k2/100
# print (x2)
# x2 =15
# p2 = (z1[15]+z1[16])/2
# print (p2)

# # интерквартильное расстояние p3
# p3 = p2-p1
# print(p3)

# медиана p4
# k4 = 50
# x4 = n*k4/100
# print(x4)
# x4=10
# p4 = (z1[10]+z1[11])/2
# print(p4)
plt.boxplot(x=[z])
plt.show()